---
- name: Update the apt cache
  apt:
    update_cache: yes
- name: Install Ubuntu packages
  apt:
    name:
      - vim
      - curl
      - git
      - python3-openstackclient
        # TODO: Replace that later with the osism role
      - docker.io
    state: present
- name: Install Snap packages
  community.general.snap:
    # TODO: Replace that later with the osism roles
    name:
      - k9s
      - kubectl
      - helm
    classic: true
- name: Check if Stern is installed
  stat:
    path: /usr/local/bin/stern
  register: check_file_status_stern
- name: Install Stern
  shell: |
    set -x
    set -e
    curl -L https://github.com/stern/stern/releases/download/v{{ clusterstacks_stern_version }}/stern_{{ clusterstacks_stern_version }}_linux_amd64.tar.gz |\
      tar -C /tmp -zxvf- stern
    mv /tmp/stern /usr/local/bin/stern
    chmod 755 /usr/local/bin/stern
    chown root:root /usr/local/bin/stern
  when: not check_file_status_stern.stat.exists
- name: Check if Clusterctl is installed
  stat:
    path: /usr/local/bin/clusterctl
  register: check_file_status_clusterctl
- name: Install clusterctl
  shell: |
    set -x
    set -e
    curl -L https://github.com/kubernetes-sigs/cluster-api/releases/download/v{{ clusterstacks_clusterctl_version }}/clusterctl-linux-amd64 \
       -o /usr/local/bin/clusterctl
    chmod 755 /usr/local/bin/clusterctl
    chown root:root /usr/local/bin/clusterctl
  when: not check_file_status_clusterctl.stat.exists
- name: Get kind installation status
  ansible.builtin.shell: |
    /usr/local/bin/kind get clusters 2>/dev/null
    exit 0
  args:
    executable: /bin/bash
  register: result
  changed_when: false
- name: Set kind installation fact
  ansible.builtin.set_fact:
    kind_cluster_state: "{{ result.stdout_lines[0] | default('') }}"
- name: Create kind cluster
  shell: |
    set -x
    set -e
    curl -Lo /usr/local/bin/kind https://kind.sigs.k8s.io/dl/v{{ clusterstacks_kind_version }}/kind-linux-amd64
    chmod 755 /usr/local/bin/kind
    chown root:root /usr/local/bin/kind
    /usr/local/bin/kind create cluster
    /usr/local/bin/kind get kubeconfig > /root/.kube/config
    chmod 600 /root/.kube/config
  args:
    executable: /bin/bash
  when: kind_cluster_state == ""
- name: Load completions via bashrc
  ansible.builtin.blockinfile:
    path: /root/.bashrc
    block: |
      source <({{ compl_item }} completion bash)
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR {{ compl_item }} COMPLETION"
  loop:
    - kind
    - clusterctl
    - kubectl
    - helm
  loop_control:
    loop_var: compl_item
