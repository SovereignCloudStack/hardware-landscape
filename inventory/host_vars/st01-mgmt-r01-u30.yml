---
##########################################################
# ansible

#External Usage
#ansible_host: 188.244.101.28

#Internal Usage
ansible_host: 10.10.21.10
#ansible_host: 192.168.104.43

##########################################################
# generic

device_model: A2SDV-4C-LN8F
internal_interface: dummy0
network_interface: dummy0
internal_address: 10.10.21.10

netdata_host_type: client

mgmt_interface: eno3
mgmt_address: 10.10.23.10
mgmt_mac: ac:1f:6b:5c:54:95

external_interface: eno2


##########################################################
# network

network_type: netplan
network_ethernets:
  dummy0:
      addresses:
      - 10.10.21.10/32
      - fd0c:cc24:75a0:1:10:10:21:10/128

  enp2s0f0np0:
      mtu: 9100
      dhcp4: "no"
      dhcp6: "no"

  enp2s0f1np1:
      mtu: 9100
      dhcp4: "no"
      dhcp6: "no"

  # Access to mangement network
  eno6:
    addresses:
      - "10.10.23.254/24"

  # Internet Uplink
  eno2:
    addresses:
      - "192.168.104.43/29"
    nameservers:
      addresses:
      - 8.8.8.8
      - 9.9.9.9
    routes:
    - to: default
      via: 192.168.104.41
    mtu: 1500

  # P2P Link to Switch st01-sw1g-r01-u47
  eno1:
    addresses:
      - "10.10.22.1/24"


# Bind Chrony to specific addresses
# NOTE: It is only possible to set at most
chrony_bindaddresses: [ "10.10.21.10" ]


motd_content: |
  .
   ____   ____ ____    _                    _
  / ___| / ___/ ___|  | |    __ _ _ __   __| |___  ___ __ _ _ __   ___
  \___ \| |   \___ \  | |   / _` | '_ \ / _` / __|/ __/ _` | '_ \ / _ \
   ___) | |___ ___) | | |__| (_| | | | | (_| \__ \ (_| (_| | |_) |  __/
  |____/ \____|____/  |_____\__,_|_| |_|\__,_|___/\___\__,_| .__/ \___|
                                                           |_|
       _                       _               _
      | |_   _ _ __ ___  _ __ | |__   ___  ___| |_
   _  | | | | | '_ ` _ \| '_ \| '_ \ / _ \/ __| __|
  | |_| | |_| | | | | | | |_) | | | | (_) \__ \ |_
   \___/ \__,_|_| |_| |_| .__/|_| |_|\___/|___/\__|
                        |_|

  * Attach to a running screen session which provides access to the ttypS0..ttyS3 interfaces
    or create automatically a new one
    scs_serial_access
    - 'CTLR + y, "'
       select your terminal
    - 'CTLR + y, :quit'
       terminate screen entirely
    - 'CTLR + y, :break'
       send a break signal
  * Restart all sessions
    sudo kill -KILL $(pgrep -u root screen)
    scs_serial_access
  * Review console output
    see /var/log/screen

  You can distribute OS Images using the folder ~/public_html (make file world readable).
  Download it using the following URI: http://{{ internal_ip }}/~<userid>/<filename>


