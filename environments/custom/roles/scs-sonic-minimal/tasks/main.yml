---
# tasks file for sonic

- name: Copy /etc/resolv.conf file
  ansible.builtin.template:
    src: resolv.conf.j2
    dest: "/etc/resolv.conf"
    owner: "root"
    group: "root"
    mode: 0644

- name: Generate a unique temporary file path
  ansible.builtin.shell: mktemp /tmp/authorized_keys_XXXXXX
  register: temp_file_result
  delegate_to: localhost
  run_once: true
  become: false
- name: Set temp_file variable
  ansible.builtin.set_fact:
    temp_file: "{{ temp_file_result.stdout }}"
- name: Create a temporary file to collect keys
  ansible.builtin.file:
    path: "{{ temp_file }}"
    state: touch
    mode: '0644'
  delegate_to: localhost
  run_once: true
  become: false
- name: Fetch public keys and append to the temp file
  ansible.builtin.uri:
    url: "https://github.com/{{ item }}.keys"
    return_content: yes
  register: key_fetch
  loop: "{{ operator_sonic_list }}"
  delegate_to: localhost
  become: false
  run_once: true
- name: "Create /home/{{ ansible_user }}/.ssh directory for the user"
  file:
    path: "/home/{{ ansible_user }}/.ssh"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0700'
- name: "Copy /home/{{ ansible_user }}/.ssh/authorized_keys file"
  ansible.builtin.template:
    src: authorized_keys.j2
    dest: "/home/{{ ansible_user }}/.ssh/authorized_keys"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
- name: Clean up temporary file
  ansible.builtin.file:
    path: "{{ temp_file }}"
    state: absent
  delegate_to: localhost
  become: false
  run_once: true

- name: Set password of admin
  become: true
  ansible.builtin.user:
    name: "admin"
    update_password: always
    password: "{{ operator_password_root }}"

